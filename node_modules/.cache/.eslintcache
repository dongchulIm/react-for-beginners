[{"/Users/dongchullim/Documents/my-app/src/index.js":"1","/Users/dongchullim/Documents/my-app/src/AppBak.js":"2","/Users/dongchullim/Documents/my-app/src/App.js":"3","/Users/dongchullim/Documents/my-app/src/Button.js":"4","/Users/dongchullim/Documents/my-app/src/routes/Detail.js":"5","/Users/dongchullim/Documents/my-app/src/routes/Home.js":"6","/Users/dongchullim/Documents/my-app/src/components/Movie.js":"7"},{"size":228,"mtime":1646197798612,"results":"8","hashOfConfig":"9"},{"size":1896,"mtime":1646197738610,"results":"10","hashOfConfig":"9"},{"size":482,"mtime":1647322898832,"results":"11","hashOfConfig":"9"},{"size":243,"mtime":1646027161380,"results":"12","hashOfConfig":"9"},{"size":1155,"mtime":1646732732034,"results":"13","hashOfConfig":"9"},{"size":1390,"mtime":1646724396401,"results":"14","hashOfConfig":"9"},{"size":655,"mtime":1646717717246,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"17la2dn",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/dongchullim/Documents/my-app/src/index.js",["42"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppBak from './AppBak';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","/Users/dongchullim/Documents/my-app/src/AppBak.js",["43","44","45"],[],"import Button from './Button.js';\nimport styles from './App.module.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [counter, setValue] = useState(0);\n  const [keyword, setKeyword] = useState(\"\");\n  //const onClick2 = () => setValue((prev) => prev + 1);\n  function onClick2(){\n    return(setValue(function(prev){\n      return  prev+1;\n    })\n    );\n  }\n\n  //const onChange = (event) => setKeyword(event.target.value);\n  function onChange(event){\n    return setKeyword(event.target.value);\n  }\n\n  // 처음 실행시에 한번만 실행하고 다시는 하지말아라.\n  useEffect(() => (\n      console.log(\"Call the API...!!\")\n  ),[]);\n  useEffect(()=>{\n    if(keyword != \"\" && keyword.length > 5){\n      console.log(\"Search For...!!\",keyword);\n    }\n  },[keyword]);\n  useEffect(()=>{\n    if(counter > 10){\n      console.log(\"Click the Button\",counter);\n    }\n  },[counter]);\n\n  useEffect(()=>{\n      console.log(\"Search Together\");\n  },[keyword,counter]);\n\n  const [showing, setShowing] = useState(false);\n\n  const onShowClick = () => setShowing((prev) => !prev);\n\n  function Hello() {\n    useEffect(() => {\n      console.log(\"hi!!!!\");\n      return () => console.log(\"byebye!!\");\n    }, []);\n    return <h1>Hello</h1>;\n\n/*     useEffect(function(){\n      console.log(\"hi!!\");\n      return function(){\n        console.log(\"byebye\");\n      }\n    }, []) */\n\n/*     function byFn() {\n      console.log(\"bye\");\n    }ss\n    function hiFn(){\n      console.log(\"hi\");\n      return byFn;\n    }\n    useEffect(hiFn,[]); */\n\n  }\n\n\n  return (\n    <div>\n      <input value={keyword} onChange={onChange} type=\"text\" placeholder='Searcr'/>\n      <h1>{counter}</h1>\n      <button onClick={onClick2}>Click me!!</button>\n      <hr></hr>\n      {showing ? <Hello/> : null}\n      <button onClick={onShowClick}>{showing ? \"Hide\" : \"Show\"}</button>\n    </div>\n  );\n}\n\nexport default App;\n ","/Users/dongchullim/Documents/my-app/src/App.js",[],[],"/Users/dongchullim/Documents/my-app/src/Button.js",[],[],"/Users/dongchullim/Documents/my-app/src/routes/Detail.js",["46"],[],"import { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nfunction Detail(){\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovies] = useState(); // 앞에 Home에 있는 movies와 달리 movie는 영화의 상세이기 때문에 한 건이라 배열이 아님\n\n    // url의 상세정보를 알려주는 역할을 함\n    const {test} = useParams()\n    const getMovie = async() => {\n        const json = await(await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${test}`)).json();\n        setMovies(json.data.movie);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovie();\n    },[])\n\n    return (\n    <div>\n        {loading ? <h1>Loading...</h1> : \n            <div>\n            <Movie\n            key = {movie.id}\n            id = {movie.id}\n            mediumCoverImage = {movie.medium_cover_image}\n            title = {movie.title}\n            summary = {movie.description_intro}\n            genres = {movie.genres}\n            />\n          </div>\n        }\n        <div>\n\n        </div>\n    </div>)\n}\n\nexport default Detail;","/Users/dongchullim/Documents/my-app/src/routes/Home.js",["47"],[],"import { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\n\nfunction Home(){\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async() => {\n    const response = await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year\")\n    const json = await response.json()\n    setMovies(json.data.movies);\n\n    setLoading(false);\n  }\n  // 위보다 더  간결한 코드\n  const getMovies2 = async() => {\n    const json = await (await fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year\")).json()\n    setMovies(json.data.movies);\n    setLoading(false);\n  }\n\n  useEffect(()=>{\n    // fetch 사용방법\n    /* fetch(\"https://api.coinpaprika.com/v1/tickers\")\n    .then((res) => res.json())\n    .then((jsonData) => {\n      setCoins(jsonData);\n      setLoading(false);\n    }) */\n    \n    // async await 사용 방법\n    getMovies();\n  },[])\n\n  //console.log(movies);\n\n  return (\n    <div>\n      {loading ? <h1>Loading...</h1> : \n      <div>\n        {movies.map((movie) => \n        <Movie\n        key = {movie.id}\n        id = {movie.id}\n        mediumCoverImage = {movie.medium_cover_image}\n        title = {movie.title}\n        summary = {movie.summary}\n        genres = {movie.genres}\n        />)}\n      </div>\n      }\n    </div>\n\n     \n\n  ); \n}\n\nexport default Home;","/Users/dongchullim/Documents/my-app/src/components/Movie.js",["48"],[],"import propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie({id, mediumCoverImage, title, summary, genres}) {\n    return <div>\n        <img src={mediumCoverImage}></img>\n        <h2><Link to={`/movie/${id}`}>{title}</Link></h2>\n        <p>{summary}</p>\n        <ul>\n        {genres.map((g) => <li key={g}>{g}</li>)}\n        </ul>\n    </div>;\n}\n\nMovie.propType = {\n    id: propTypes.number.isRequired,\n    mediumCoverImage : propTypes.string.isRequired,\n    title : propTypes.string.isRequired,\n    summary : propTypes.string.isRequired,\n    genres : propTypes.arrayOf(propTypes.string).isRequired,\n}\n\nexport default Movie;",{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":26,"column":16,"nodeType":"57","messageId":"58","endLine":26,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":17,"column":7,"nodeType":"61","endLine":17,"endColumn":9,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":15,"column":9,"nodeType":"51","messageId":"52","endLine":15,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":6,"column":9,"nodeType":"66","endLine":6,"endColumn":37},"no-unused-vars","'AppBak' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'styles' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'getMovies2' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"68","fix":"69"},"Update the dependencies array to be: [getMovie]",{"range":"70","text":"71"},[622,624],"[getMovie]"]