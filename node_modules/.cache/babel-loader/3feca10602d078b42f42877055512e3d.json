{"ast":null,"code":"import _asyncToGenerator from\"/Users/dongchullim/Documents/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/dongchullim/Documents/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/dongchullim/Documents/my-app/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import Movie from\"../components/Movie\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Detail(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),movie=_useState4[0],setMovies=_useState4[1];// 앞에 Home에 있는 movies와 달리 movie는 영화의 상세이기 때문에 한 건이라 배열이 아님\n// url의 상세정보를 알려주는 역할을 함\nvar _useParams=useParams(),test=_useParams.test;var getMovie=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://yts.mx/api/v2/movie_details.json?movie_id=\".concat(test));case 2:_context.next=4;return _context.sent.json();case 4:json=_context.sent;setMovies(json.data.movie);setLoading(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getMovie(){return _ref.apply(this,arguments);};}();useEffect(function(){getMovie();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[loading?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Movie,{id:movie.id,mediumCoverImage:movie.medium_cover_image,title:movie.title,summary:movie.description_intro,genres:movie.genres},movie.id)}),/*#__PURE__*/_jsx(\"div\",{})]});}export default Detail;","map":{"version":3,"sources":["/Users/dongchullim/Documents/my-app/src/routes/Detail.js"],"names":["useEffect","useState","useParams","Movie","Detail","loading","setLoading","movie","setMovies","test","getMovie","fetch","json","data","id","medium_cover_image","title","description_intro","genres"],"mappings":"8WAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,wFACA,QAASC,CAAAA,MAAT,EAAiB,CACb,cAA8BH,QAAQ,CAAC,IAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,eAA2BL,QAAQ,EAAnC,yCAAOM,KAAP,eAAcC,SAAd,eAAuC;AAEvC;AACA,eAAeN,SAAS,EAAxB,CAAOO,IAAP,YAAOA,IAAP,CACA,GAAMC,CAAAA,QAAQ,0FAAG,kKACYC,CAAAA,KAAK,6DAAsDF,IAAtD,EADjB,6CACgFG,IADhF,UACPA,IADO,eAEbJ,SAAS,CAACI,IAAI,CAACC,IAAL,CAAUN,KAAX,CAAT,CACAD,UAAU,CAAC,KAAD,CAAV,CAHa,sDAAH,kBAARI,CAAAA,QAAQ,0CAAd,CAKAV,SAAS,CAAC,UAAM,CACZU,QAAQ,GACX,CAFQ,CAEP,EAFO,CAAT,CAIA,mBACA,uBACKL,OAAO,cAAG,kCAAH,cACJ,kCACA,KAAC,KAAD,EAEA,EAAE,CAAIE,KAAK,CAACO,EAFZ,CAGA,gBAAgB,CAAIP,KAAK,CAACQ,kBAH1B,CAIA,KAAK,CAAIR,KAAK,CAACS,KAJf,CAKA,OAAO,CAAIT,KAAK,CAACU,iBALjB,CAMA,MAAM,CAAIV,KAAK,CAACW,MANhB,EACOX,KAAK,CAACO,EADb,CADA,EAFR,cAaI,cAbJ,GADA,CAkBH,CAED,cAAeV,CAAAA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nfunction Detail(){\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovies] = useState(); // 앞에 Home에 있는 movies와 달리 movie는 영화의 상세이기 때문에 한 건이라 배열이 아님\n\n    // url의 상세정보를 알려주는 역할을 함\n    const {test} = useParams()\n    const getMovie = async() => {\n        const json = await(await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${test}`)).json();\n        setMovies(json.data.movie);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovie();\n    },[])\n\n    return (\n    <div>\n        {loading ? <h1>Loading...</h1> : \n            <div>\n            <Movie\n            key = {movie.id}\n            id = {movie.id}\n            mediumCoverImage = {movie.medium_cover_image}\n            title = {movie.title}\n            summary = {movie.description_intro}\n            genres = {movie.genres}\n            />\n          </div>\n        }\n        <div>\n\n        </div>\n    </div>)\n}\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}