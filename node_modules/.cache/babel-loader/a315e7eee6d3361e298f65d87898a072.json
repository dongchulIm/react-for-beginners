{"ast":null,"code":"var _jsxFileName = \"/Users/dongchullim/Documents/my-app/src/routes/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Detail() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovies] = useState(); // 앞에 Home에 있는 movies와 달리 movie는 영화의 상세이기 때문에 한 건이라 배열이 아님\n  // url의 상세정보를 알려주는 역할을 함\n\n  const {\n    test\n  } = useParams();\n\n  const getMovie = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${test}`)).json();\n    setMovies(json.data.movie);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        mediumCoverImage: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.description_intro,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Detail, \"4n2+SOw/bmOuI/XQf7Z23jMGNDw=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/dongchullim/Documents/my-app/src/routes/Detail.js"],"names":["useEffect","useState","useParams","Movie","Detail","loading","setLoading","movie","setMovies","test","getMovie","json","fetch","data","id","medium_cover_image","title","description_intro","genres"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AACA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,SAAR,IAAqBP,QAAQ,EAAnC,CAFa,CAE0B;AAEvC;;AACA,QAAM;AAACQ,IAAAA;AAAD,MAASP,SAAS,EAAxB;;AACA,QAAMQ,QAAQ,GAAG,YAAW;AACxB,UAAMC,IAAI,GAAG,MAAK,CAAC,MAAMC,KAAK,CAAE,qDAAoDH,IAAK,EAA3D,CAAZ,EAA2EE,IAA3E,EAAlB;AACAH,IAAAA,SAAS,CAACG,IAAI,CAACE,IAAL,CAAUN,KAAX,CAAT;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAJD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACA;AAAA,eACKL,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACJ;AAAA,6BACA,QAAC,KAAD;AAEA,QAAA,EAAE,EAAIE,KAAK,CAACO,EAFZ;AAGA,QAAA,gBAAgB,EAAIP,KAAK,CAACQ,kBAH1B;AAIA,QAAA,KAAK,EAAIR,KAAK,CAACS,KAJf;AAKA,QAAA,OAAO,EAAIT,KAAK,CAACU,iBALjB;AAMA,QAAA,MAAM,EAAIV,KAAK,CAACW;AANhB,SACOX,KAAK,CAACO,EADb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFR,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH;;GAjCQV,M;UAKUF,S;;;KALVE,M;AAmCT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Movie from \"../components/Movie\";\nfunction Detail(){\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovies] = useState(); // 앞에 Home에 있는 movies와 달리 movie는 영화의 상세이기 때문에 한 건이라 배열이 아님\n\n    // url의 상세정보를 알려주는 역할을 함\n    const {test} = useParams()\n    const getMovie = async() => {\n        const json = await(await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${test}`)).json();\n        setMovies(json.data.movie);\n        setLoading(false);\n    }\n    useEffect(() => {\n        getMovie();\n    },[])\n\n    return (\n    <div>\n        {loading ? <h1>Loading...</h1> : \n            <div>\n            <Movie\n            key = {movie.id}\n            id = {movie.id}\n            mediumCoverImage = {movie.medium_cover_image}\n            title = {movie.title}\n            summary = {movie.description_intro}\n            genres = {movie.genres}\n            />\n          </div>\n        }\n        <div>\n\n        </div>\n    </div>)\n}\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}